{"version":3,"sources":["reduxStore.js","localStorageHelper.js","components/constants.js","components/AddNewList.js","components/Header.js","components/GroupAndSearchTool.js","components/TodoDataFillerModel.js","components/TodoListRow.js","components/TodoTabs.js","App.js","reportWebVitals.js","index.js"],"names":["window","_","moment","initialStore","userName","todoList","id","v4","summary","discription","dueDate","priority","done","numberPriority","createdOn","Date","format","editTaskId","searchKey","groupBy","DUE_DATE_TOGGLE","PRIORITY_TOGGLE","SUMMARY_SORT_TOGGLE","ADD_TODO_LIST","UPDATE_TODO_LIST","DELETE","DONE","DUE_DATE_SORT_BY","PRIORITY_WISE_SORT","SUMMARY_SORT","EDIT_TASK_ID","CLEAR_EDIT_TASK_ID","SEARCH_KEY","SET_GROUP_BY","CHANGE_USER_NAME","toggleDoneFag","todolist","copyArray","forEach","list","sortBySummary","copyData","sortedData","sortBy","toLowerCase","reverse","sortByPriorityWise","sortTaskByDate","todayDate","dateSplitted","split","diff","updateTodoList","payload","cleanPayload","JSON","parse","stringify","index","Object","keys","k","getInitalData","initialState","serializedState","localStorage","getItem","error","console","log","getLocalStorageState","store","createStore","state","type","filter","editTaskID","applyMiddleware","logger","subscribe","throttle","setItem","setLocalStorageState","getState","DATE_FORMAT","PRIORITY_MAPPER","0","1","2","3","AddNewList","props","dispatch","useDispatch","useSelector","useState","setSummary","setDiscription","setDueDate","setPriority","onSaveClick","event","preventDefault","isEmpty","onHide","addNewTaskAction","Modal","size","aria-labelledby","centered","Header","Title","Body","Form","onSubmit","Group","controlId","Label","Control","onChange","value","target","as","rows","className","defaultValue","customDate","Footer","Button","onClick","NameChange","show","setShow","handleClose","name","setName","variant","closeButton","InputGroup","FormControl","aria-label","aria-describedby","currentTarget","modalShow","setModalShow","GroupAndSearchTool","search","setSearch","placeholder","EditTodoDetails","editableTodoData","find","todoId","updateTodoListAction","splittedDate","defaultDueDateFormat","style","textDecoration","TodoListRow","onclickmodelshow","onDoneClick","onDeleteClick","RowsComponentParent","data","bind","groupData","map","Component","groupbyData","None","groupByFun","key","i","display","justifyContent","uniqueId","TodoRows","TodoTabs","filteredData","includes","Tabs","defaultActiveKey","Tab","eventKey","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae509a71.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport { v4 } from \"uuid\";\nimport moment from 'moment';\nimport _ from 'lodash';\nimport logger from \"redux-logger\";\nimport { getLocalStorageState, setLocalStorageState } from './localStorageHelper'\nwindow._ = _;\nwindow.moment = moment;\n\n\n// Store initial state, just dummy data to show.\nconst initialStore = {\n    userName: 'Guru',\n    todoList: [\n        {\n            id: v4(),\n            summary: ' Go to gym ',\n            discription: 'Make 100 push up',\n            dueDate: '16/04/2021',\n            priority: 'High',\n            done: false,\n            numberPriority: 3,\n            createdOn: moment(new Date()).format('DD/MM/YYYY'),\n            userName: 'Guru',\n        },\n        {\n            id: v4(),\n            summary: ' Market ',\n            discription: 'Bring 10KG tomato',\n            dueDate: '17/04/2021',\n            priority: 'Medium',\n            done: false,\n            numberPriority: 2,\n            createdOn: moment(new Date()).format('DD/MM/YYYY'),\n            userName: 'Guru',\n        },\n        {\n            id: v4(),\n            summary: ' Home work ',\n            discription: 'Write essay on school',\n            dueDate: '18/04/2021',\n            priority: 'Low',\n            done: false,\n            numberPriority: 1,\n            userName: 'Guru',\n            createdOn: moment(new Date()).format('DD/MM/YYYY')\n        },\n        {\n            id: v4(),\n            summary: ' Swimming ',\n            discription: 'Goto swimming classes',\n            dueDate: '20/04/2021',\n            priority: 'None',\n            done: false,\n            numberPriority: 0,\n            userName: 'Guru',\n            createdOn: moment(new Date()).format('DD/MM/YYYY')\n        },\n    ],\n    editTaskId: null,\n    searchKey: '',\n    groupBy: 0,\n}\n\n// Action type constants\nlet DUE_DATE_TOGGLE = false;\nlet PRIORITY_TOGGLE = false;\nlet SUMMARY_SORT_TOGGLE = false;\nconst ADD_TODO_LIST = 'ADD_TODO_LIST';\nconst UPDATE_TODO_LIST = 'UPDATE_TODO_LIST';\nconst DELETE = 'DELETE';\nconst DONE = 'DONE';\nconst DUE_DATE_SORT_BY = 'DUE_DATE_SORT_BY';\nconst PRIORITY_WISE_SORT = 'PRIORITY_WISE_SORT';\nconst SUMMARY_SORT = 'SUMMARY_SORT';\nconst EDIT_TASK_ID = 'EDIT_TASK_ID';\nconst CLEAR_EDIT_TASK_ID = 'CLEAR_EDIT_TASK_ID';\nconst SEARCH_KEY = 'SEARCH_KEY';\nconst SET_GROUP_BY = 'SET_GROUP_BY';\nconst CHANGE_USER_NAME = 'CHANGE_USER_NAME';\n\n\n// all Actions are here\nexport function addNewTaskAction(payload) {\n    return {\n        type: ADD_TODO_LIST,\n        payload: {\n            id: v4(),\n            done: false,\n            ...payload,\n            createdOn: moment(new Date()).format('DD/MM/YYYY')\n        }\n    }\n}\n\nexport function updateTodoListAction(payload) {\n    return {\n        type: UPDATE_TODO_LIST,\n        payload,\n    }\n}\n\nexport function searchKeyAction(payload) {\n    return {\n        type: SEARCH_KEY,\n        payload,\n    }\n}\n\nexport function deletTodoListAction(payload) {\n    return ({\n        type: DELETE,\n        payload,\n    })\n}\n\nexport function doneTodoListAction(payload) {\n    return {\n        type: DONE,\n        payload\n    }\n}\n\nexport function updateUserAction(payload) {\n    return ({\n        type: CHANGE_USER_NAME,\n        payload\n    })\n}\n\nexport function dueDateSprtByAction() {\n    return {\n        type: DUE_DATE_SORT_BY,\n    }\n}\n\nexport function priorityWiseSortAction() {\n    return {\n        type: PRIORITY_WISE_SORT,\n    }\n}\n\nexport function summaryWiseSortAction() {\n    return {\n        type: SUMMARY_SORT\n    }\n}\n\nexport function editTaskID(payload) {\n    return {\n        type: EDIT_TASK_ID,\n        payload,\n    }\n}\n\nexport function clearEditTaskID() {\n    return {\n        type: CLEAR_EDIT_TASK_ID,\n    }\n}\n\n\nexport function addGroupByAction(payload) {\n    return {\n        type: SET_GROUP_BY,\n        payload\n    }\n}\n\n// Reducers and helper functions\n\nfunction toggleDoneFag(todolist, id) {\n    const copyArray = [...todolist];\n    copyArray.forEach(list => {\n        if (list.id === id) {\n            list.done = !list.done;\n        }\n    });\n    return copyArray;\n}\n\nfunction sortBySummary(todolist) {\n    const copyData = [...todolist];\n    let sortedData = _.sortBy(copyData, list => list.summary.toLowerCase());\n    if (SUMMARY_SORT_TOGGLE) {\n        sortedData = _.reverse(sortedData)\n    }\n    SUMMARY_SORT_TOGGLE = !SUMMARY_SORT_TOGGLE;\n    return sortedData;\n}\n\nfunction sortByPriorityWise(todolist) {\n    const copyData = [...todolist];\n    let sortedData = _.sortBy(copyData, list => list.numberPriority);\n    if (PRIORITY_TOGGLE) {\n        sortedData = _.reverse(sortedData)\n    }\n    PRIORITY_TOGGLE = !PRIORITY_TOGGLE;\n    return sortedData;\n}\n\nfunction sortTaskByDate(todolist) {\n    const todayDate = moment(new Date());\n\n    const copyData = [...todolist];\n    copyData.forEach((list) => {\n        const dateSplitted = list.dueDate.split('/');\n        const diff = todayDate.diff([dateSplitted[2], dateSplitted[1], dateSplitted[0]]);\n        list.diff = diff;\n    });\n    let sortedData = _.sortBy(copyData, list => list.diff);\n    if (DUE_DATE_TOGGLE) {\n        sortedData = _.reverse(sortedData)\n    }\n    DUE_DATE_TOGGLE = !DUE_DATE_TOGGLE;\n    return sortedData;\n}\n\nfunction updateTodoList(todolist, payload) {\n    const copyData = [...todolist];\n    const cleanPayload = JSON.parse(JSON.stringify(payload));\n    copyData.forEach((list, index) => {\n        if (list.id === cleanPayload.id) {\n            const keys = Object.keys(cleanPayload);\n            keys.forEach(k => {\n                list[k] = cleanPayload[k];\n            })\n        }\n    });\n    return copyData;\n}\n\nfunction reducer(state = initialStore, { type, payload }) {\n    switch (type) {\n        case ADD_TODO_LIST:\n            return {\n                ...state,\n                todoList: [...state.todoList, payload],\n            }\n        case UPDATE_TODO_LIST:\n            return {\n                ...state,\n                todoList: updateTodoList(state.todoList, payload)\n            }\n        case DELETE:\n            return {\n                ...state,\n                todoList: state.todoList.filter(list => list.id !== payload),\n            }\n        case DONE:\n\n            return {\n                ...state,\n                todoList: toggleDoneFag(state.todoList, payload),\n            }\n        case DUE_DATE_SORT_BY:\n            return {\n                ...state,\n                todoList: sortTaskByDate(state.todoList)\n            }\n        case PRIORITY_WISE_SORT:\n            return {\n                ...state,\n                todoList: sortByPriorityWise(state.todoList)\n            }\n        case SUMMARY_SORT:\n            return {\n                ...state,\n                todoList: sortBySummary(state.todoList)\n            }\n        case EDIT_TASK_ID:\n            return {\n                ...state,\n                editTaskId: payload\n            }\n        case CLEAR_EDIT_TASK_ID:\n            return {\n                ...state,\n                editTaskID: null,\n            }\n        case SEARCH_KEY:\n            return {\n                ...state,\n                searchKey: payload,\n            }\n\n        case SET_GROUP_BY:\n            return {\n                ...state,\n                groupBy: payload,\n            }\n        case CHANGE_USER_NAME:\n            return {\n                ...state,\n                userName: payload,\n            }\n        default:\n            return state;\n    }\n}\n\nconst getInitalData = getLocalStorageState(initialStore);\nconst store = createStore(reducer, getInitalData, applyMiddleware(logger));\nfunction onStoreUpdate() {\n    console.log('update');\n    setLocalStorageState(store.getState())\n}\nstore.subscribe(_.throttle(onStoreUpdate, 1000))\n\nexport default store;","export function getLocalStorageState(initialState) {\n    try {\n        const serializedState = window.localStorage.getItem('todoAppState');\n        if (!serializedState) {\n            return initialState;\n        }\n        return JSON.parse(serializedState);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport function setLocalStorageState(state) {\n    try {\n        const serializedState = JSON.stringify(state);\n        window.localStorage.setItem('todoAppState', serializedState);\n    } catch (error) {\n        console.log(error);\n    }\n}","export const DATE_FORMAT = 'DD/MM/YYYY';\n\nexport const PRIORITY_MAPPER = {\n    0: 'None',\n    1: 'Low',\n    2: 'Medium',\n    3: 'High',\n  }","import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport moment from 'moment';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewTaskAction } from '../reduxStore';\nimport { DATE_FORMAT, PRIORITY_MAPPER } from './constants'\nimport _ from \"lodash\";\n\nfunction AddNewList(props) {\n  const dispatch = useDispatch();\n  const userName = useSelector(state => state.userName)\n  const [summary, setSummary] = useState();\n  const [discription, setDiscription] = useState();\n  const [dueDate, setDueDate] = useState();\n  const [priority, setPriority] = useState('0');\n\n  const onSummaryChange = ({ target: { value } }) => {\n    setSummary(value);\n  }\n\n  const onDiscriptionChange = ({ target: { value } }) => {\n    setDiscription(value);\n  }\n\n  const onDueDateChange = ({ target: { value } }) => {\n    const customDate = moment(value).format(DATE_FORMAT)\n    setDueDate(customDate);\n  }\n\n  const onPriorityChange = ({ target: { value } }) => {\n    setPriority(value);\n  }\n\n  const onSaveClick = (event) => {\n    event && event.preventDefault();\n    if (_.isEmpty(summary) || _.isEmpty(discription)) { // if data is empty then dont dispatch payload.\n      props.onHide();\n      return;\n    }\n    const payload = {\n      summary,\n      discription,\n      dueDate: dueDate || moment(new Date()).format(DATE_FORMAT),\n      priority: PRIORITY_MAPPER[priority || '0'],\n      numberPriority: priority || 0,\n      userName\n    }\n    console.log(payload);\n    dispatch(addNewTaskAction(payload));\n    props.onHide();\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add Task</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={onSaveClick}>\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Summary</Form.Label>\n            <Form.Control type=\"text\" onChange={onSummaryChange} />\n          </Form.Group>\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Discription</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} onChange={onDiscriptionChange} />\n          </Form.Group>\n          <Form.Group className=\"row\">\n            <div className=\"col\">\n              <Form.Label>Due Date</Form.Label>\n              <Form.Control type=\"date\" defaultValue=\"currentDate\" onChange={onDueDateChange} />\n            </div>\n            <div className=\"col\">\n              <Form.Label>Priority</Form.Label>\n              <Form.Control as=\"select\" onChange={onPriorityChange}>\n                <option value=\"0\">None</option>\n                <option value=\"1\">Low</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">High</option>\n              </Form.Control>\n            </div>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        <Button onClick={onSaveClick}>Save</Button>\n\n      </Modal.Footer>\n\n    </Modal>\n  );\n}\n\nexport default AddNewList;","import { useState } from 'react';\nimport {\n  Button,\n  Modal,\n  Form,\n  InputGroup,\n  FormControl\n} from \"react-bootstrap\";\nimport _ from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserAction } from '../reduxStore'\nimport AddNewList from './AddNewList';\n\nfunction NameChange() {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const userName = useSelector(state => state.userName);\n  const [name, setName] = useState(userName)\n  const onInputChange = ({ currentTarget: { value } }) => {\n    setName(value)\n  }\n\n\n  const onSaveClick = (event) => {\n    event && event.preventDefault();\n    !_.isEmpty(name) && dispatch(updateUserAction(name));\n    handleClose();\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Edit user\n          </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>User change</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={onSaveClick}>\n\n            <InputGroup className=\"mb-3\" value={name}>\n              <FormControl\n                aria-label=\"Default\"\n                aria-describedby=\"inputGroup-sizing-default\"\n                value={name}\n                onChange={onInputChange}\n\n              />\n            </InputGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n                  </Button>\n          <Button variant=\"primary\" onClick={onSaveClick}>\n            Save Changes\n                  </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nconst Header = () => {\n  const [modalShow, setModalShow] = useState(false);\n  const userName = useSelector(store => store.userName);\n  return (\n    <div className=\"headerContainer d-flex\">\n      <h1> Todo list of {userName}</h1> <NameChange />\n      <Button\n        variant=\"primary\"\n        onClick={() => setModalShow(true)}\n        className=\"ml-1\"\n      >\n        +\n        </Button>\n      <AddNewList\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </div>\n  )\n}\n\nexport default Header;","import { useState } from \"react\";\nimport {\n    InputGroup,\n    FormControl,\n    Form,\n} from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { searchKeyAction, addGroupByAction } from '../reduxStore'\n\nconst GroupAndSearchTool = () => {\n    const dispatch = useDispatch();\n    const [search, setSearch] = useState('');\n    const onSearchInputChange = ({ target: { value } }) => {\n        setSearch(value);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        dispatch(searchKeyAction(search))\n    }\n\n    const onGroupByChange = ({ target: { value } }) => {\n        dispatch(addGroupByAction(+value)); // need value on number type, not in string type.\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"groupbyContainer col-3\">\n                <h4>Group by</h4>\n                <Form.Control as=\"select\" onChange={onGroupByChange}>\n                    <option value='0'>None</option>\n                    <option value='1'>Created On</option>\n                    <option value='2'>Pending On</option>\n                    <option value='3'>Priority</option>\n                    <option value='4'>Created by</option>\n                </Form.Control>\n            </div>\n            <div className=\"searchContainer col\" >\n                <h4>Search</h4>\n                <form onSubmit={onSubmit}>\n                    <InputGroup className=\"mb-3\"  >\n                        <FormControl\n                            placeholder=\"Search for task, hit enter to search. Clear to show all list.\"\n                            onChange={onSearchInputChange}\n                        />\n                    </InputGroup>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default GroupAndSearchTool;\n","import React, { useState } from \"react\";\nimport {\n    Button,\n    Modal,\n    Form,\n} from \"react-bootstrap\";\nimport moment from 'moment';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateTodoListAction } from '../reduxStore';\nimport { DATE_FORMAT, PRIORITY_MAPPER } from './constants';\n\nexport default function EditTodoDetails(props) {\n    const dispatch = useDispatch();\n    const editableTodoData = useSelector(store => store.todoList).find(list => list.id === props.todoId);\n    const userName = useSelector(state => state.userName);\n    const [summary, setSummary] = useState(editableTodoData.summary);\n    const [discription, setDiscription] = useState(editableTodoData.discription);\n    const [dueDate, setDueDate] = useState(editableTodoData.dueDate);\n    const [priority, setPriority] = useState(editableTodoData.numberPriority);\n\n    const onSummaryChange = ({ target: { value } }) => {\n        setSummary(value);\n    }\n\n    const onDiscriptionChange = ({ target: { value } }) => {\n        setDiscription(value);\n    }\n\n    const onDueDateChange = ({ target: { value } }) => {\n        const customDate = moment(value).format(DATE_FORMAT)\n        setDueDate(customDate);\n    }\n\n    const onPriorityChange = ({ target: { value } }) => {\n        setPriority(value);\n    }\n\n    const onSaveClick = (event) => {\n        event && event.preventDefault();\n        const payload = {\n            summary,\n            discription,\n            dueDate: dueDate || moment(new Date()).format(DATE_FORMAT),\n            priority: PRIORITY_MAPPER[priority || '0'],\n            numberPriority: priority || 0,\n            userName,\n            id: props.todoId,\n        }\n        dispatch(updateTodoListAction(payload));\n        props.setModalShow(false);\n    }\n    const splittedDate = dueDate.split('/');\n    const defaultDueDateFormat = splittedDate[2] + '-' + splittedDate[1] + '-' + splittedDate[0];\n    return (\n        <Modal\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            show={props.show}\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">Add Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={onSaveClick}>\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Summary</Form.Label>\n                        <Form.Control type=\"text\" onChange={onSummaryChange} value={summary} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Discription</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} onChange={onDiscriptionChange} value={discription} />\n                    </Form.Group>\n                    <Form.Group className=\"row\">\n                        <div className=\"col\">\n                            <Form.Label>Due Date</Form.Label>\n                            <Form.Control type=\"date\" value={defaultDueDateFormat} onChange={onDueDateChange} />\n                        </div>\n                        <div className=\"col\">\n                            <Form.Label>Priority</Form.Label>\n                            <Form.Control as=\"select\" onChange={onPriorityChange} value={priority}>\n                                <option value=\"0\">None</option>\n                                <option value=\"1\">Low</option>\n                                <option value=\"2\">Medium</option>\n                                <option value=\"3\">High</option>\n                            </Form.Control>\n                        </div>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={() => {\n                    props.setModalShow(false);\n                }}>Close</Button>\n                <Button onClick={onSaveClick}>Save</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}","import {\n  Button,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deletTodoListAction, doneTodoListAction,\n} from '../reduxStore'\nimport _, { uniqueId } from 'lodash'\nimport TodoEditModel from './TodoDataFillerModel'\nimport { useState } from \"react\";\n\nconst style = (done) => {\n  return { textDecoration: done ? 'line-through' : 'auto', }\n}\n\nconst TodoListRow = ({ onclickmodelshow, todoList }) => {\n  const dispatch = useDispatch();\n\n  const onDoneClick = (id) => {\n    dispatch(doneTodoListAction(id));\n  }\n\n  const onDeleteClick = (id) => {\n    dispatch(deletTodoListAction(id));\n  }\n\n  const groupBy = useSelector(store => store.groupBy);\n  const groupByFun = () => { // get group by data based to todo list details.\n    switch (groupBy) {\n      case 0:\n        return { None: todoList };\n      case 1:\n        return _.groupBy(todoList, (list) => {\n          return list.createdOn;\n        })\n      case 2:\n        return _.groupBy(todoList, (list) => {\n          return list.dueDate;\n        })\n      case 3:\n        return _.groupBy(todoList, (list) => {\n          return list.priority;\n        })\n      case 4:\n        return _.groupBy(todoList, (list) => {\n          return list.userName;\n        })\n      default:\n        return { None: todoList };\n    }\n  }\n\n  const RowsComponentParent = ({ data: { id, summary, dueDate, createdOn, priority, done, userName } }) => {\n    const [modalShow, setModalShow] = useState(false);\n\n    return (\n      <div key={id} className=\"Headings row\">\n        <div className=\"col head\">\n          <span style={style(done)}>{summary}</span>\n        </div>\n        <div className=\"col head\">\n          <span style={style(done)}>{priority}</span>\n        </div>\n\n        <div className=\"col head\">\n          <span style={style(done)}>{createdOn}</span>\n        </div>\n\n        <div className=\"col head\">\n          <span style={style(done)}>{dueDate}</span>\n        </div>\n        <div className=\"col head\">\n          <span style={style(done)}>{userName}</span>\n        </div>\n        <div className=\"col head\">\n          <div className=\"row\">\n            <Button variant=\"primary\" size=\"sm\" className=\"editBT col\" onClick={() => {\n              setModalShow(true);\n            }}>\n              {'Edit'}\n            </Button>\n            <Button variant=\"success\" className=\"doneBT col\" onClick={onDoneClick.bind({}, id)}>\n              {done ? 'ReOpen' : 'Done'}\n            </Button>\n            <Button variant=\"danger\" className=\"deleteBT col\" onClick={onDeleteClick.bind({}, id)}>\n              Delete\n              </Button>\n          </div>\n        </div>\n        <TodoEditModel show={modalShow} todoId={id} setModalShow={() => {\n          setModalShow(false);\n        }} />\n      </div>\n    )\n  }\n\n  const Header = ({ groupData }) => {\n    return groupData.map((data) => {\n      return (\n        <div key={data.id} className=\"Headings row\">\n          < RowsComponentParent data={data} />\n        </div>\n      )\n\n    })\n  }\n  const Component = () => {\n    const groupbyData = groupByFun();\n    return Object.keys(groupbyData).map((key, i) => {\n      return (\n        <div key={uniqueId()}>\n          <div style={{\n            display: 'flex',\n            justifyContent: 'center'\n          }}><span>{key}</span></div>\n          <Header groupData={groupbyData[key]} ></Header>\n        </div>\n      )\n    })\n  }\n\n  return (< >\n    <Component />\n  </>)\n}\n\nexport default TodoListRow;","import {\n  Button,\n  Tabs,\n  Tab,\n} from \"react-bootstrap\";\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TodoListRow from './TodoListRow'\nimport {\n  dueDateSprtByAction, priorityWiseSortAction, summaryWiseSortAction\n} from '../reduxStore'\nimport AddNewList from './AddNewList';\n\nconst TodoRows = () => {\n  const dispatch = useDispatch();\n  const dueDateSortByClick = () => {\n    dispatch(dueDateSprtByAction());\n  }\n\n  const priorityWiseSortList = () => {\n    dispatch(priorityWiseSortAction());\n  }\n\n  const summaryWiseSortList = () => {\n    dispatch(summaryWiseSortAction());\n  }\n\n  return ( // All header row data ex : summery, Priority etc.\n    <div className=\"Headings row\">\n      <div className=\"col head\">\n        <span>Summary</span>\n        <Button className=\"SummaryBt\" onClick={summaryWiseSortList}>^</Button>\n      </div>\n      <div className=\"col head\">\n        <span>Priority</span>\n        <Button className=\"priorityBT\" onClick={priorityWiseSortList}>^</Button>\n      </div>\n      <div className=\"col head\">\n        <span>Created On</span>\n      </div>\n      <div className=\"col head\">\n        <span>Due By</span>\n        <Button className=\"DueBT\" onClick={dueDateSortByClick}>^</Button>\n      </div>\n      <div className=\"col head\">\n        <span>User name</span>\n      </div>\n      <div className=\"col head\">\n        <span>Actions</span>\n      </div>\n    </div>\n  )\n}\n\n\nconst TodoTabs = () => {\n  const [modalShow, setModalShow] = useState(false);\n  const todoList = useSelector(store => store.todoList);\n  const searchKey = useSelector(store => store.searchKey).toLowerCase();\n  const completed = () => {\n    return todoList.filter(list => !list.done)\n  }\n\n  const filteredSearchList = () => { // based on search string filter out data and pass to row component to show.\n    return todoList.filter(list => {\n      return list.summary.toLowerCase().includes(searchKey);\n    })\n  }\n\n  const filteredData = filteredSearchList();\n\n  const pending = () => {\n    return todoList.filter(list => list.done)\n  }\n\n  return (\n    <div className=\"Todos-tab\">\n      <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"home\" title=\"All\">\n          <div>\n            <TodoRows />\n            <TodoListRow todoList={filteredData} onclickmodelshow={() => setModalShow(true)} />\n          </div>\n        </Tab>\n        <Tab eventKey=\"pending\" title=\"Pending\">\n          <div>\n            <TodoRows />\n            <TodoListRow todoList={completed()} onclickmodelshow={() => setModalShow(true)} />\n          </div>\n        </Tab>\n        <Tab eventKey=\"completed\" title=\"Completed\">\n          <div>\n            <TodoRows />\n            <TodoListRow todoList={pending()} onclickmodelshow={() => setModalShow(true)} />\n          </div>\n        </Tab>\n      </Tabs>\n      <AddNewList\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </div>\n  )\n}\n\nexport default TodoTabs;","import \"./App.css\";\nimport React from \"react\";\nimport { Header, GroupAndSearchTool, TodoTabs } from './components';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <GroupAndSearchTool />\n      <TodoTabs />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Provider } from \"react-redux\";\nimport store from './reduxStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}