{"version":3,"sources":["reduxStore.js","components/AddNewList.js","components/Header.js","components/GroupAndSearchTool.js","components/TodoListRow.js","components/TodoTabs.js","App.js","reportWebVitals.js","index.js"],"names":["window","_","initialStore","todoList","id","v4","summary","discription","dueDate","priority","done","numberPriority","createdOn","moment","Date","format","editTaskId","searchKey","groupBy","DUE_DATE_TOGGLE","PRIORITY_TOGGLE","SUMMARY_SORT_TOGGLE","ADD_TODO_LIST","UPDATE_TODO_LIST","DELETE","DONE","DUE_DATE_SORT_BY","PRIORITY_WISE_SORT","SUMMARY_SORT","EDIT_TASK_ID","CLEAR_EDIT_TASK_ID","SEARCH_KEY","SET_GROUP_BY","toggleDoneFag","todolist","copyArray","forEach","list","sortBySummary","copyData","sortedData","sortBy","toLowerCase","reverse","sortByPriorityWise","sortTaskByDate","todayDate","dateSplitted","split","diff","updateTodoList","payload","cleanPayload","JSON","parse","stringify","index","Object","keys","k","createStore","state","type","filter","editTaskID","priorityMapper","0","1","2","3","AddNewList","props","useSelector","dispatch","useDispatch","useState","setSummary","setDiscription","setDueDate","setPriority","Modal","size","aria-labelledby","centered","Header","Title","Body","Form","Group","controlId","Label","Control","onChange","value","target","as","rows","className","defaultValue","customDate","Footer","Button","onClick","onHide","updateTodoListAction","addNewTaskAction","modalShow","setModalShow","variant","show","GroupAndSearchTool","search","setSearch","onSubmit","event","preventDefault","InputGroup","FormControl","placeholder","style","textDecoration","TodoListRow","onclickmodelshow","onDoneClick","onEditClick","onDeleteClick","store","RowsComponentParent","data","bind","groupData","map","Component","groupbyData","None","groupByFun","key","i","display","justifyContent","uniqueId","TodoRows","TodoTabs","filteredData","includes","Tabs","defaultActiveKey","Tab","eventKey","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85b1fdac.chunk.js","sourcesContent":["import { createStore } from \"redux\";\nimport { v4 } from \"uuid\";\nimport moment from 'moment';\nimport _ from 'lodash';\nwindow._ = _;\n\n\n// Store initial state, just dummy data to show.\nconst initialStore = {\n    todoList: [\n        {\n            id: v4(),\n            summary: ' Go to gym ',\n            discription: ' Make 100 push up',\n            dueDate: '16/04/2021',\n            priority: 'High',\n            done: false,\n            numberPriority: 3,\n            createdOn: moment(new Date()).format('DD/MM/YYYY')\n        },\n        {\n            id: v4(),\n            summary: ' Market ',\n            discription: ' Bring 10KG tomato',\n            dueDate: '17/04/2021',\n            priority: 'Medium',\n            done: false,\n            numberPriority: 2,\n            createdOn: moment(new Date()).format('DD/MM/YYYY')\n        },\n        {\n            id: v4(),\n            summary: ' Home work ',\n            discription: ' Write essay on school',\n            dueDate: '18/04/2021',\n            priority: 'Low',\n            done: false,\n            numberPriority: 1,\n            createdOn: moment(new Date()).format('DD/MM/YYYY')\n        },\n        {\n            id: v4(),\n            summary: ' Swimming ',\n            discription: ' Goto swimming classes',\n            dueDate: '20/04/2021',\n            priority: 'None',\n            done: false,\n            numberPriority: 0,\n            createdOn: moment(new Date()).format('DD/MM/YYYY')\n        },\n    ],\n    editTaskId: null,\n    searchKey: '',\n    groupBy: 0,\n}\n\n// Action type constants\nlet DUE_DATE_TOGGLE = false;\nlet PRIORITY_TOGGLE = false;\nlet SUMMARY_SORT_TOGGLE = false;\nconst ADD_TODO_LIST = 'ADD_TODO_LIST';\nconst UPDATE_TODO_LIST = 'UPDATE_TODO_LIST';\nconst DELETE = 'DELETE';\nconst DONE = 'DONE';\nconst DUE_DATE_SORT_BY = 'DUE_DATE_SORT_BY';\nconst PRIORITY_WISE_SORT = 'PRIORITY_WISE_SORT';\nconst SUMMARY_SORT = 'SUMMARY_SORT';\nconst EDIT_TASK_ID = 'EDIT_TASK_ID';\nconst CLEAR_EDIT_TASK_ID = 'CLEAR_EDIT_TASK_ID';\nconst SEARCH_KEY = 'SEARCH_KEY';\nconst SET_GROUP_BY = 'SET_GROUP_BY';\n\n\n// all Actions are here\nconst addNewTaskAction = (payload) => {\n    return ({\n        type: ADD_TODO_LIST,\n        payload: {\n            id: v4(),\n            done: false,\n            ...payload,\n            createdOn: moment(new Date()).format('DD/MM/YYYY')\n\n        }\n    })\n}\n\nconst updateTodoListAction = (payload) => {\n    return ({\n        type: UPDATE_TODO_LIST,\n        payload,\n    })\n}\n\nconst searchKeyAction = (payload) => {\n    return ({\n        type: SEARCH_KEY,\n        payload,\n    })\n}\n\nconst deletTodoListAction = (payload) => {\n    return ({\n        type: DELETE,\n        payload,\n    })\n}\n\nconst doneTodoListAction = (payload) => {\n    return ({\n        type: DONE,\n        payload\n    })\n}\n\nconst dueDateSprtByAction = () => {\n    return {\n        type: DUE_DATE_SORT_BY,\n    }\n}\n\nconst priorityWiseSortAction = () => {\n    return {\n        type: PRIORITY_WISE_SORT,\n    }\n}\n\nconst summaryWiseSortAction = () => {\n    return {\n        type: SUMMARY_SORT\n    }\n}\n\nconst editTaskID = (payload) => {\n    return {\n        type: EDIT_TASK_ID,\n        payload,\n    }\n}\n\nconst clearEditTaskID = () => {\n    return {\n        type: CLEAR_EDIT_TASK_ID,\n    }\n}\n\n\nconst addGroupByAction = (payload) => {\n    return {\n        type: SET_GROUP_BY,\n        payload\n    }\n}\nexport {\n    addNewTaskAction, addGroupByAction, searchKeyAction, editTaskID,\n    clearEditTaskID, updateTodoListAction, deletTodoListAction, doneTodoListAction,\n    dueDateSprtByAction, priorityWiseSortAction, summaryWiseSortAction\n};\n\n\n// Reducers and helper functions\n\nconst toggleDoneFag = (todolist, id) => {\n    const copyArray = [...todolist];\n    copyArray.forEach(list => {\n        if (list.id === id) {\n            list.done = !list.done;\n        }\n    });\n    return copyArray;\n}\n\nconst sortBySummary = (todolist) => {\n    const copyData = [...todolist];\n    let sortedData = _.sortBy(copyData, list => list.summary.toLowerCase());\n    if (SUMMARY_SORT_TOGGLE) {\n        sortedData = _.reverse(sortedData)\n    }\n    SUMMARY_SORT_TOGGLE = !SUMMARY_SORT_TOGGLE;\n    return sortedData;\n}\n\nconst sortByPriorityWise = (todolist) => {\n    const copyData = [...todolist];\n    let sortedData = _.sortBy(copyData, list => list.numberPriority);\n    if (PRIORITY_TOGGLE) {\n        sortedData = _.reverse(sortedData)\n    }\n    PRIORITY_TOGGLE = !PRIORITY_TOGGLE;\n    return sortedData;\n}\n\nconst sortTaskByDate = (todolist) => {\n    const todayDate = moment(new Date());\n\n    const copyData = [...todolist];\n    copyData.forEach((list) => {\n        const dateSplitted = list.dueDate.split('/');\n        const diff = todayDate.diff([dateSplitted[2], dateSplitted[1], dateSplitted[0]]);\n        list.diff = diff;\n    });\n    let sortedData = _.sortBy(copyData, list => list.diff);\n    if (DUE_DATE_TOGGLE) {\n        sortedData = _.reverse(sortedData)\n    }\n    DUE_DATE_TOGGLE = !DUE_DATE_TOGGLE;\n    return sortedData;\n}\n\nconst updateTodoList = (todolist, payload) => {\n    const copyData = [...todolist];\n    const cleanPayload = JSON.parse(JSON.stringify(payload));\n    copyData.forEach((list, index) => {\n        if (list.id === cleanPayload.id) {\n            const keys = Object.keys(cleanPayload);\n            keys.forEach(k => {\n                list[k] = cleanPayload[k];\n            })\n        }\n    });\n    return copyData;\n}\n\nconst reducer = (state = initialStore, { type, payload }) => {\n    switch (type) {\n        case ADD_TODO_LIST:\n            return {\n                ...state,\n                todoList: [...state.todoList, payload],\n            }\n        case UPDATE_TODO_LIST:\n            return {\n                ...state,\n                todoList: updateTodoList(state.todoList, payload)\n            }\n        case DELETE:\n            return {\n                ...state,\n                todoList: state.todoList.filter(list => list.id !== payload),\n            }\n        case DONE:\n\n            return {\n                ...state,\n                todoList: toggleDoneFag(state.todoList, payload),\n            }\n        case DUE_DATE_SORT_BY:\n            return {\n                ...state,\n                todoList: sortTaskByDate(state.todoList)\n            }\n        case PRIORITY_WISE_SORT:\n            return {\n                ...state,\n                todoList: sortByPriorityWise(state.todoList)\n            }\n        case SUMMARY_SORT:\n            return {\n                ...state,\n                todoList: sortBySummary(state.todoList)\n\n            }\n        case EDIT_TASK_ID:\n            return {\n                ...state,\n                editTaskId: payload\n            }\n        case CLEAR_EDIT_TASK_ID:\n            return {\n                ...state,\n                editTaskID: null,\n            }\n        case SEARCH_KEY:\n            return {\n                ...state,\n                searchKey: payload,\n            }\n\n        case SET_GROUP_BY:\n            return {\n                ...state,\n                groupBy: payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default createStore(reducer, initialStore);","import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport moment from 'moment';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewTaskAction, updateTodoListAction, clearEditTaskID } from '../reduxStore'\n\nconst priorityMapper = {\n  0: 'None',\n  1: 'Low',\n  2: 'Medium',\n  3: 'High',\n}\n\nfunction AddNewList(props) {\n  const editTaskId = useSelector(state => state.editTaskId)\n  const dispatch = useDispatch();\n  const [summary, setSummary] = useState();\n  const [discription, setDiscription] = useState();\n  const [dueDate, setDueDate] = useState();\n  const [priority, setPriority] = useState('0');\n\n  const onSummaryChange = ({ target: { value } }) => {\n    setSummary(value);\n  }\n\n  const onDiscriptionChange = ({ target: { value } }) => {\n    setDiscription(value);\n  }\n\n  const onDueDateChange = ({ target: { value } }) => {\n    const customDate = moment(value).format('DD/MM/YYYY')\n    setDueDate(customDate);\n  }\n\n  const onPriorityChange = ({ target: { value } }) => {\n    setPriority(value);\n  }\n\n  const onSaveClick = () => {\n    if (!summary && !discription && !dueDate && !priority) { // if data is empty then dont dispatch payload.\n      return;\n    }\n    const payload = {\n      summary,\n      discription,\n      dueDate: dueDate || moment(new Date()).format('DD/MM/YYYY'),\n      priority: priorityMapper[priority || '0'],\n      numberPriority: priority || 0\n    }\n    if (!!editTaskId) { // If in edit component then dispatch update data only\n      payload.id = editTaskId;\n      dispatch(updateTodoListAction(payload));\n    } else { // pass payload data\n      dispatch(addNewTaskAction(payload));\n    }\n    dispatch(clearEditTaskID());\n    props.onHide();\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">Add Task</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Summary</Form.Label>\n            <Form.Control type=\"text\" onChange={onSummaryChange} />\n          </Form.Group>\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Discription</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} onChange={onDiscriptionChange} />\n          </Form.Group>\n          <Form.Group className=\"row\">\n            <div className=\"col\">\n              <Form.Label>Due Date</Form.Label>\n              <Form.Control type=\"date\" defaultValue=\"currentDate\" onChange={onDueDateChange} />\n            </div>\n            <div className=\"col\">\n              <Form.Label>Priority</Form.Label>\n              <Form.Control as=\"select\" onChange={onPriorityChange}>\n                <option value=\"0\">None</option>\n                <option value=\"1\">Low</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">High</option>\n              </Form.Control>\n            </div>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        <Button onClick={onSaveClick}>Save</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default AddNewList;","import { useState } from 'react';\nimport {\n  Button,\n} from \"react-bootstrap\";\n\nimport AddNewList from './AddNewList';\n\nconst Header = () => {\n  const [modalShow, setModalShow] = useState(false);\n  return (\n    <div className=\"headerContainer d-flex\">\n      <h1> Todo list app</h1>\n      <Button\n        variant=\"primary\"\n        onClick={() => setModalShow(true)}\n        className=\"ml-1\"\n      >\n        +\n        </Button>\n      <AddNewList\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </div>\n  )\n}\n\nexport default Header;","import { useState } from \"react\";\nimport {\n    InputGroup,\n    FormControl,\n    Form,\n} from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { searchKeyAction, addGroupByAction } from '../reduxStore'\n\nconst GroupAndSearchTool = () => {\n    const dispatch = useDispatch();\n    const [search, setSearch] = useState('');\n    const onSearchInputChange = ({ target: { value } }) => {\n        setSearch(value);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        dispatch(searchKeyAction(search))\n    }\n\n    const onGroupByChange = ({ target: { value } }) => {\n        dispatch(addGroupByAction(+value)); // need value on number type, not in string type.\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"groupbyContainer col-3\">\n                <h4>Group by</h4>\n                <Form.Control as=\"select\" onChange={onGroupByChange}>\n                    <option value='0'>None</option>\n                    <option value='1'>Created On</option>\n                    <option value='2'>Pending On</option>\n                    <option value='3'>Priority</option>\n                </Form.Control>\n            </div>\n            <div className=\"searchContainer col\" >\n                <h4>Search</h4>\n                <form onSubmit={onSubmit}>\n                    <InputGroup className=\"mb-3\"  >\n                        <FormControl\n                            placeholder=\"Search for task, hit enter to search. Clear to show all list. (Case sensitive)\"\n                            onChange={onSearchInputChange}\n                        />\n                    </InputGroup>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default GroupAndSearchTool;\n","import {\n    Button,\n  } from \"react-bootstrap\";\n  import { useDispatch, useSelector } from \"react-redux\";\n  import {\n    deletTodoListAction, editTaskID, doneTodoListAction,\n  } from '../reduxStore'\n  import _, { uniqueId } from 'lodash'\n  \n  const style = (done) => {\n    return { textDecoration: done ? 'line-through' : 'auto', }\n  }\n\n  const TodoListRow = ({ onclickmodelshow, todoList }) => {\n    const dispatch = useDispatch();\n  \n    const onDoneClick = (id) => {\n      dispatch(doneTodoListAction(id));\n    }\n  \n    const onEditClick = (id) => {\n      dispatch(editTaskID(id));\n      onclickmodelshow();\n    }\n  \n    const onDeleteClick = (id) => {\n      dispatch(deletTodoListAction(id));\n    }\n  \n    const groupBy = useSelector(store => store.groupBy);\n    const groupByFun = () => { // get group by data based to todo list details.\n      switch (groupBy) {\n        case 0:\n          return { None: todoList };\n        case 1:\n          return _.groupBy(todoList, (list) => {\n            return list.createdOn;\n          })\n        case 2:\n          return _.groupBy(todoList, (list) => {\n            return list.dueDate;\n          })\n        case 3:\n          return _.groupBy(todoList, (list) => {\n            return list.priority;\n          })\n        default:\n          return { None: todoList };\n      }\n    }\n  \n    const RowsComponentParent = ({ data: { id, summary, dueDate, createdOn, priority, done } }) => {\n      return (\n        <div key={id} className=\"Headings row\">\n          <div className=\"col head\">\n            <span style={style(done)}>{summary}</span>\n          </div>\n          <div className=\"col head\">\n            <span style={style(done)}>{priority}</span>\n          </div>\n  \n          <div className=\"col head\">\n            <span style={style(done)}>{createdOn}</span>\n          </div>\n  \n          <div className=\"col head\">\n            <span style={style(done)}>{dueDate}</span>\n          </div>\n          <div className=\"col head\">\n            <div className=\"row\">\n              <Button variant=\"primary\" size=\"sm\" className=\"editBT col\" onClick={onEditClick.bind({}, id)}>\n                {'Edit'}\n              </Button>\n              <Button variant=\"success\" className=\"doneBT col\" onClick={onDoneClick.bind({}, id)}>\n                {done ? 'ReOpen' : 'Done'}\n              </Button>\n              <Button variant=\"danger\" className=\"deleteBT col\" onClick={onDeleteClick.bind({}, id)}>\n                Delete\n              </Button>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  \n    const Header = ({ groupData }) => {\n      return groupData.map((data) => {\n        return (\n          <div key={data.id} className=\"Headings row\">\n            < RowsComponentParent data={data} />\n          </div>\n        )\n  \n      })\n    }\n    const Component = () => {\n      const groupbyData = groupByFun();\n      return Object.keys(groupbyData).map((key, i) => {\n        return (\n          <div key={uniqueId()}>\n            <div style={{\n              display: 'flex',\n              justifyContent: 'center'\n            }}><span>{key}</span></div>\n            <Header groupData={groupbyData[key]} ></Header>\n          </div>\n        )\n      })\n    }\n  \n    return (< >\n      <Component />\n    </>)\n  }\n\n  export default TodoListRow;","import {\n  Button,\n  Tabs,\n  Tab,\n} from \"react-bootstrap\";\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TodoListRow from './TodoListRow'\nimport {\n  dueDateSprtByAction, priorityWiseSortAction, summaryWiseSortAction\n} from '../reduxStore'\nimport AddNewList from './AddNewList';\n\nconst TodoRows = () => {\n  const dispatch = useDispatch();\n  const dueDateSortByClick = () => {\n    dispatch(dueDateSprtByAction());\n  }\n\n  const priorityWiseSortList = () => {\n    dispatch(priorityWiseSortAction());\n  }\n\n  const summaryWiseSortList = () => {\n    dispatch(summaryWiseSortAction());\n  }\n\n  return ( // All header row data ex : summery, Priority etc.\n    <div className=\"Headings row\">\n      <div className=\"col head\">\n        <span>Summary</span>\n        <Button className=\"SummaryBt\" onClick={summaryWiseSortList}>^</Button>\n      </div>\n      <div className=\"col head\">\n        <span>Priority</span>\n        <Button className=\"priorityBT\" onClick={priorityWiseSortList}>^</Button>\n      </div>\n      <div className=\"col head\">\n        <span>Created On</span>\n        <Button className=\"createdOn\">^</Button>\n      </div>\n      <div className=\"col head\">\n        <span>Due By</span>\n        <Button className=\"DueBT\" onClick={dueDateSortByClick}>^</Button>\n      </div>\n      <div className=\"col head\">\n        <span>Actions</span>\n      </div>\n    </div>\n  )\n}\n\n\nconst TodoTabs = () => {\n  const [modalShow, setModalShow] = useState(false);\n  const todoList = useSelector(store => store.todoList);\n  const searchKey = useSelector(store => store.searchKey);\n  const completed = () => {\n    return todoList.filter(list => !list.done)\n  }\n\n  const filteredSearchList = () => { // based on search string filter out data and pass to row component to show.\n    return todoList.filter(list => {\n      return list.summary.includes(searchKey) || list.discription.includes(searchKey).summary\n    })\n  }\n\n  const filteredData = filteredSearchList();\n\n  const pending = () => {\n    return todoList.filter(list => list.done)\n  }\n\n  return (\n    <div className=\"Todos-tab\">\n      <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"home\" title=\"All\">\n          <div>\n            <TodoRows />\n            <TodoListRow todoList={filteredData} onclickmodelshow={() => setModalShow(true)} />\n          </div>\n        </Tab>\n        <Tab eventKey=\"pending\" title=\"Pending\">\n          <div>\n            <TodoRows />\n            <TodoListRow todoList={completed()} onclickmodelshow={() => setModalShow(true)} />\n          </div>\n        </Tab>\n        <Tab eventKey=\"completed\" title=\"Completed\">\n          <div>\n            <TodoRows />\n            <TodoListRow todoList={pending()} onclickmodelshow={() => setModalShow(true)} />\n          </div>\n        </Tab>\n      </Tabs>\n      <AddNewList\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </div>\n  )\n}\n\nexport default TodoTabs;","import \"./App.css\";\nimport React from \"react\";\nimport store from './reduxStore';\nimport { Header, GroupAndSearchTool, TodoTabs } from './components';\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App \">\n        <Header />\n        <GroupAndSearchTool />\n        <TodoTabs />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}